<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bgSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>131, 17</value>
  </metadata>
  <metadata name="bgListItem.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Patientname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Age.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Ageunit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SampleType.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>56</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYiXeYiXefnJnQ0dLQ0dIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYiXeYiXefnJnQ
        0dLQ0dIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAC7oX+7oX+Gdl6Ymp2Ymp3a297u7e3u7e3h4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsjmaHd2KHd2Knq7Di5efi5ef08/Lp6urp6urj4uLf39/f
        398AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsjmaHd2KHd2Kn
        q7Di5efi5ef08/Lp6urp6urj4uLf39/f398AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDclunq62nq63p6Ov76/P76/O60MVKyZJKyZIa0oYl0Yol0Yop
        0Y0o0o0o0o0p0owp0o0p0o0q0o0n1Isn1Iss1pEq1Y4q1Y4sz4wsx4Ysx4YovoAsun4sun4uw4Yl0o0l
        0o0wwoZyoI1yoI2vr68AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6q5V/dGV/dGWzt7zx7+/x7+/t5+qe
        zLqezLo3zZEd2Y4d2Y4s2JQw1pMw1pMv1pQu15Mu15Mv15Uv2JUv2JUw15Y02Jg02JgyzosswYQswYQs
        t4EqvYUqvYUwy5Ay350y350r4JlGt4tGt4uRmpcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC6q5V/dGV/dGWzt7zx7+/x7+/t5+qezLqezLo3zZEd2Y4d2Y4s2JQw1pMw1pMv1pQu15Mu15Mv15Uv
        2JUv2JUw15Y02Jg02JgyzosswYQswYQst4EqvYUqvYUwy5Ay350y350r4JlGt4tGt4uRmpcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbmZS5vcS5vcT09vr05un05umowLE4yo84yo8d4JQt4Jot
        4Joy3psy3Zoy3Zox3psy3Jsy3Js13Z0135w135wz3pw14J014J1YpWFJtnhJtngs5KRF6KtF6KtT97lS
        4q1S4q1jqpCXnJuXnJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+vr3n5ePn5ePw
        7+/j4OLj4OLP0s+py7qpy7p5yapP0aFP0aE13aA656Y656ZI7atK6q1K6q1E56pA56ZA56Y+5aU+56o+
        56pkvoOIsIaIsIZh/ct0/cd0/cd117KJoZaJoZaqqacAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC+vr3n5ePn5ePw7+/j4OLj4OLP0s+py7qpy7p5yapP0aFP0aE13aA656Y656ZI
        7atK6q1K6q1E56pA56ZA56Y+5aU+56o+56pkvoOIsIaIsIZh/ct0/cd0/cd117KJoZaJoZaqqacAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq6+vq6+vq5eb3
        4ur34urw1eDKxcrKxcqYwbSE07OE07OC6sF89sh89sh2+8dy+cVy+cVu98Jv98Nv98Nz982TzrKTzrKb
        1LNyyqtyyquGkZKxtLaxtLYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADG4tXh4ODh4ODu1t/bxczbxcy7vrybx7ibx7iL2r6I
        7s2I7s2R+9aa/tma/tme/uWV4LCV4LCWkU+Zl4+Zl48AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADG4tXh4ODh
        4ODu1t/bxczbxcy7vrybx7ibx7iL2r6I7s2I7s2R+9aa/tma/tme/uWV4LCV4LCWkU+Zl4+Zl48AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADH3NbH3Nba09XPvrbPvraxq5uZs6GZs6Gix7e74NO7
        4NO42NSVqqOVqqO2oX3NxKXNxKUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADGzbDCuprCupq2qo2tpZ+tpZ+Xm5qqrKmqrKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGzbDCuprCupq2qo2tpZ+tpZ+Xm5qqrKmqrKkA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAC4wre4wrcAAAAAAAAAAAAAAAAAAAAAAADgpYoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj
        wqjjwqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjwqjjwqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADctJcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADctJcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADWo3zWo3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZqX8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADZqX8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD////wf/8AAP////B//wAA////gD//AAD///8AD/8AAP///wAP/wAA///8AAf/
        AAD///gAB/8AAP//+AAH/wAA///gAAH/AAD//8AAAP8AAP//wAAA/wAA//8AAAA/AAD/+AAAAB8AAP/4
        AAAAHwAA//AAAAAHAAD/wAAAAAMAAP/AAAAAAwAA/4AAAAAAAAD+AAAAAAMAAP4AAAAAAwAA/AAAAAAf
        AADwAAAAAD8AAPAAAAAAPwAA4AAAAAD/AAAAAAAAB/8AAAAAAAAH/wAAAAAAAA//AAAAAAAAP/8AAAAA
        AAA//wAA8AAAAH//AAD/gAAD//8AAP+AAAP//wAA//gAA///AAD//8Af//8AAP//wB///wAA///8/f//
        AAD////+f/8AAP////5//wAA////////AAD/////v/8AAP////+//wAA/////8//AAD/////9/8AAP//
        ///3/wAA////////AAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>